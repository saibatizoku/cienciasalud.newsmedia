This package adds a media container for ATNewsItem content-types.

cienciasalud.newsmedia allows the final user to add images, videos, and regular
binary/text files into a media container that is attached to the content
object.

####### FIXME
- self.portal is the portal root
- self.folder is the current user's folder
- self.logout() "logs out" so that the user is Anonymous
- self.setRoles(['Manager', 'Member']) adjusts the roles of the current user
####### FIXME

INSTALLATION
============

Our product should be installable through our portal's quickinstaller.

    >>> qi = self.portal.portal_quickinstaller
    >>> self.addProduct('cienciasalud.newsmedia')
    >>> qi.isProductInstalled('cienciasalud.newsmedia')
    True

WORKING WITH NEWS ITEMS IN THE BROWSER
======================================

First, we use our test browser to login as the portal manager, then create
a News Item, and store it in the root of our portal.

    >>> from Testing.testbrowser import Browser
    >>> from Products.PloneTestCase.setup import portal_owner, default_password
    >>> self.browser = Browser()

    >>> portal_url = self.portal.absolute_url()
    >>> self.browser.open(portal_url)
    >>> self.browser.getLink('Log in').click()
    >>> self.browser.getControl(name='__ac_name').value = portal_owner
    >>> self.browser.getControl(name='__ac_password').value = default_password
    >>> self.browser.getControl(name='submit').click()
    >>> self.browser.open(portal_url)
    >>> self.browser.getLink(id='news-item').click()
    >>> self.browser.getControl(name='title').value = u'Lorem ipsum news'
    >>> self.browser.getControl(name='description').value = u'Donec bibendum gravida sapien, quis gravida quam laoreet vitae.'
    >>> self.browser.getControl(name='form.button.save').click()
    >>> u'lorem-ipsum-news' in self.portal
    True

    >>> news_url = self.portal['lorem-ipsum-news'].absolute_url()
    >>> self.browser.open(news_url)

Once we have our news item created, we add a sample image to our 'media' folder.

    >>> zptlogo = (
    ...     'GIF89a\x10\x00\x10\x00\xd5\x00\x00\xff\xff\xff\xff\xff\xfe\xfc\xfd\xfd'
    ...     '\xfa\xfb\xfc\xf7\xf9\xfa\xf5\xf8\xf9\xf3\xf6\xf8\xf2\xf5\xf7\xf0\xf4\xf6'
    ...     '\xeb\xf1\xf3\xe5\xed\xef\xde\xe8\xeb\xdc\xe6\xea\xd9\xe4\xe8\xd7\xe2\xe6'
    ...     '\xd2\xdf\xe3\xd0\xdd\xe3\xcd\xdc\xe1\xcb\xda\xdf\xc9\xd9\xdf\xc8\xd8\xdd'
    ...     '\xc6\xd7\xdc\xc4\xd6\xdc\xc3\xd4\xda\xc2\xd3\xd9\xc1\xd3\xd9\xc0\xd2\xd9'
    ...     '\xbd\xd1\xd8\xbd\xd0\xd7\xbc\xcf\xd7\xbb\xcf\xd6\xbb\xce\xd5\xb9\xcd\xd4'
    ...     '\xb6\xcc\xd4\xb6\xcb\xd3\xb5\xcb\xd2\xb4\xca\xd1\xb2\xc8\xd0\xb1\xc7\xd0'
    ...     '\xb0\xc7\xcf\xaf\xc6\xce\xae\xc4\xce\xad\xc4\xcd\xab\xc3\xcc\xa9\xc2\xcb'
    ...     '\xa8\xc1\xca\xa6\xc0\xc9\xa4\xbe\xc8\xa2\xbd\xc7\xa0\xbb\xc5\x9e\xba\xc4'
    ...     '\x9b\xbf\xcc\x98\xb6\xc1\x8d\xae\xbaFgs\x00\x00\x00\x00\x00\x00\x00\x00'
    ...     '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
    ...     '\x00,\x00\x00\x00\x00\x10\x00\x10\x00\x00\x06z@\x80pH,\x12k\xc8$\xd2f\x04'
    ...     '\xd4\x84\x01\x01\xe1\xf0d\x16\x9f\x80A\x01\x91\xc0ZmL\xb0\xcd\x00V\xd4'
    ...     '\xc4a\x87z\xed\xb0-\x1a\xb3\xb8\x95\xbdf8\x1e\x11\xca,MoC$\x15\x18{'
    ...     '\x006}m\x13\x16\x1a\x1f\x83\x85}6\x17\x1b $\x83\x00\x86\x19\x1d!%)\x8c'
    ...     '\x866#\'+.\x8ca`\x1c`(,/1\x94B5\x19\x1e"&*-024\xacNq\xba\xbb\xb8h\xbeb'
    ...     '\x00A\x00;'
    ...     )
    ...
    >>> import StringIO
    >>> zptfile = StringIO.StringIO(zptlogo)
    >>> self.browser.getLink(id='add_media').click()
    >>> self.browser.getControl(name='form.data').add_file(zptfile, 'image/gif', 'zpt.gif')
    >>> self.browser.getControl(name='form.actions.upload').click()
    >>> 'zpt.gif' in self.portal['lorem-ipsum-news']['media']
    True
    >>> self.portal['lorem-ipsum-news']['media']['zpt.gif'].getSize()
    (16, 16)
